/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { utils, Contract, ContractFactory, } from "ethers";
const _abi = [
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "v2Factory",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "v3Factory",
                        type: "address",
                    },
                    {
                        internalType: "bytes32",
                        name: "pairInitCodeHash",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "poolInitCodeHash",
                        type: "bytes32",
                    },
                ],
                internalType: "struct UniswapParameters",
                name: "params",
                type: "tuple",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
];
const _bytecode = "0x610100346100e757601f61011238819003918201601f19168301926001600160401b03929091838511838610176100d15781608092849260409788528339810103126100e75782519160808301908111838210176100d1578352610062816100ec565b90818352610072602082016100ec565b6020840190815284820151858501908152606092830151929094019182526001600160a01b03928316608052925160a05291511660c0525160e0525160119081610101823960805181505060a05181505060c05181505060e051815050f35b634e487b7160e01b600052604160045260246000fd5b600080fd5b51906001600160a01b03821682036100e75756fe600080fdfea164736f6c6343000811000a";
export class UniswapImmutables__factory extends ContractFactory {
    constructor(...args) {
        if (args.length === 1) {
            super(_abi, _bytecode, args[0]);
        }
        else {
            super(...args);
        }
    }
    deploy(params, overrides) {
        return super.deploy(params, overrides || {});
    }
    getDeployTransaction(params, overrides) {
        return super.getDeployTransaction(params, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    }
}
UniswapImmutables__factory.bytecode = _bytecode;
UniswapImmutables__factory.abi = _abi;
//# sourceMappingURL=UniswapImmutables__factory.js.map