import { NativeCurrency, Token } from '@uniswap/sdk-core';
import { UniverseChainId } from 'uniswap/src/features/chains/types';
export declare const USDT_MONAD_TESTNET: Token;
export declare const USDC_SEPOLIA: Token;
export declare const USDC_UNICHAIN_SEPOLIA: Token;
export declare const DAI: Token;
export declare const USDT: Token;
export declare const USDC_MAINNET: Token;
export declare const USDC: Token;
export declare const USDC_OPTIMISM: Token;
export declare const USDT_OPTIMISM: Token;
export declare const DAI_OPTIMISM: Token;
export declare const WBTC_OPTIMISM: Token;
export declare const USDC_BASE: Token;
export declare const BTC_BSC: Token;
export declare const USDC_BNB: Token;
export declare const USDT_BNB: Token;
export declare const USDC_BSC: Token;
export declare const USDT_BSC: Token;
export declare const ETH_BSC: Token;
export declare const BUSD_BSC: Token;
export declare const DAI_BSC: Token;
export declare const DAI_POLYGON: Token;
export declare const USDC_POLYGON: Token;
export declare const USDT_POLYGON: Token;
export declare const WBTC_POLYGON: Token;
export declare const WETH_POLYGON: Token;
export declare const USDB_BLAST: Token;
export declare const ARB: Token;
export declare const USDT_ARBITRUM_ONE: Token;
export declare const USDC_ARBITRUM: Token;
export declare const WBTC_ARBITRUM_ONE: Token;
export declare const DAI_ARBITRUM_ONE: Token;
export declare const USDC_AVALANCHE: Token;
export declare const USDT_AVALANCHE: Token;
export declare const WETH_AVALANCHE: Token;
export declare const DAI_AVALANCHE: Token;
export declare const CELO_CELO: Token;
export declare const PORTAL_ETH_CELO: Token;
export declare const USDC_CELO: Token;
export declare const CUSD_CELO: Token;
export declare const USDC_ZORA: Token;
export declare const USDC_WORLD_CHAIN: Token;
export declare const USDC_ZKSYNC: Token;
export declare const WBTC: Token;
export declare const MATIC_MAINNET: Token;
export declare const UNI: {
    1: Token;
    10: Token;
    11155111: Token;
};
export declare const OP: Token;
export declare const LDO: Token;
export declare const NMR: Token;
export declare const MNW: Token;
export declare const WRAPPED_NATIVE_CURRENCY: {
    [chainId: number]: Token;
};
export declare function isCelo(chainId: number): chainId is UniverseChainId.Celo;
export declare function isPolygon(chainId: number): chainId is UniverseChainId.Polygon;
export declare function isBsc(chainId: number): chainId is UniverseChainId.Bnb;
export declare function isAvalanche(chainId: number): chainId is UniverseChainId.Avalanche;
export declare function nativeOnChain(chainId: number): NativeCurrency | Token;
//# sourceMappingURL=tokens.d.ts.map